/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package es.curso.model.impl;

import aQute.bnd.annotation.ProviderType;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.ModelWrapper;
import com.liferay.portal.kernel.model.User;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.service.UserLocalServiceUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;

import es.curso.model.Tarea;
import es.curso.model.TareaModel;

import java.io.Serializable;

import java.sql.Types;

import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the Tarea service. Represents a row in the &quot;Gradle_Tarea&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link TareaModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link TareaImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see TareaImpl
 * @see Tarea
 * @see TareaModel
 * @generated
 */
@ProviderType
public class TareaModelImpl extends BaseModelImpl<Tarea> implements TareaModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a tarea model instance should use the {@link Tarea} interface instead.
	 */
	public static final String TABLE_NAME = "Gradle_Tarea";
	public static final Object[][] TABLE_COLUMNS = {
			{ "uuid_", Types.VARCHAR },
			{ "tareaId", Types.BIGINT },
			{ "groupId", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "userId", Types.BIGINT },
			{ "nombreTarea", Types.VARCHAR },
			{ "descripcionTarea", Types.VARCHAR }
		};
	public static final Map<String, Integer> TABLE_COLUMNS_MAP = new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("uuid_", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("tareaId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("groupId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("companyId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("nombreTarea", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("descripcionTarea", Types.VARCHAR);
	}

	public static final String TABLE_SQL_CREATE = "create table Gradle_Tarea (uuid_ VARCHAR(75) null,tareaId LONG not null primary key,groupId LONG,companyId LONG,userId LONG,nombreTarea VARCHAR(75) null,descripcionTarea VARCHAR(75) null)";
	public static final String TABLE_SQL_DROP = "drop table Gradle_Tarea";
	public static final String ORDER_BY_JPQL = " ORDER BY tarea.tareaId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY Gradle_Tarea.tareaId ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(es.curso.service.util.ServiceProps.get(
				"value.object.entity.cache.enabled.es.curso.model.Tarea"), true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(es.curso.service.util.ServiceProps.get(
				"value.object.finder.cache.enabled.es.curso.model.Tarea"), true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(es.curso.service.util.ServiceProps.get(
				"value.object.column.bitmask.enabled.es.curso.model.Tarea"),
			true);
	public static final long COMPANYID_COLUMN_BITMASK = 1L;
	public static final long GROUPID_COLUMN_BITMASK = 2L;
	public static final long UUID_COLUMN_BITMASK = 4L;
	public static final long TAREAID_COLUMN_BITMASK = 8L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(es.curso.service.util.ServiceProps.get(
				"lock.expiration.time.es.curso.model.Tarea"));

	public TareaModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _tareaId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setTareaId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _tareaId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return Tarea.class;
	}

	@Override
	public String getModelClassName() {
		return Tarea.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("uuid", getUuid());
		attributes.put("tareaId", getTareaId());
		attributes.put("groupId", getGroupId());
		attributes.put("companyId", getCompanyId());
		attributes.put("userId", getUserId());
		attributes.put("nombreTarea", getNombreTarea());
		attributes.put("descripcionTarea", getDescripcionTarea());

		attributes.put("entityCacheEnabled", isEntityCacheEnabled());
		attributes.put("finderCacheEnabled", isFinderCacheEnabled());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		String uuid = (String)attributes.get("uuid");

		if (uuid != null) {
			setUuid(uuid);
		}

		Long tareaId = (Long)attributes.get("tareaId");

		if (tareaId != null) {
			setTareaId(tareaId);
		}

		Long groupId = (Long)attributes.get("groupId");

		if (groupId != null) {
			setGroupId(groupId);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		String nombreTarea = (String)attributes.get("nombreTarea");

		if (nombreTarea != null) {
			setNombreTarea(nombreTarea);
		}

		String descripcionTarea = (String)attributes.get("descripcionTarea");

		if (descripcionTarea != null) {
			setDescripcionTarea(descripcionTarea);
		}
	}

	@Override
	public String getUuid() {
		if (_uuid == null) {
			return "";
		}
		else {
			return _uuid;
		}
	}

	@Override
	public void setUuid(String uuid) {
		if (_originalUuid == null) {
			_originalUuid = _uuid;
		}

		_uuid = uuid;
	}

	public String getOriginalUuid() {
		return GetterUtil.getString(_originalUuid);
	}

	@Override
	public long getTareaId() {
		return _tareaId;
	}

	@Override
	public void setTareaId(long tareaId) {
		_tareaId = tareaId;
	}

	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		_columnBitmask |= GROUPID_COLUMN_BITMASK;

		if (!_setOriginalGroupId) {
			_setOriginalGroupId = true;

			_originalGroupId = _groupId;
		}

		_groupId = groupId;
	}

	public long getOriginalGroupId() {
		return _originalGroupId;
	}

	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_columnBitmask |= COMPANYID_COLUMN_BITMASK;

		if (!_setOriginalCompanyId) {
			_setOriginalCompanyId = true;

			_originalCompanyId = _companyId;
		}

		_companyId = companyId;
	}

	public long getOriginalCompanyId() {
		return _originalCompanyId;
	}

	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_userId = userId;
	}

	@Override
	public String getUserUuid() {
		try {
			User user = UserLocalServiceUtil.getUserById(getUserId());

			return user.getUuid();
		}
		catch (PortalException pe) {
			return "";
		}
	}

	@Override
	public void setUserUuid(String userUuid) {
	}

	@Override
	public String getNombreTarea() {
		if (_nombreTarea == null) {
			return "";
		}
		else {
			return _nombreTarea;
		}
	}

	@Override
	public void setNombreTarea(String nombreTarea) {
		_nombreTarea = nombreTarea;
	}

	@Override
	public String getDescripcionTarea() {
		if (_descripcionTarea == null) {
			return "";
		}
		else {
			return _descripcionTarea;
		}
	}

	@Override
	public void setDescripcionTarea(String descripcionTarea) {
		_descripcionTarea = descripcionTarea;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			Tarea.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public Tarea toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (Tarea)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		TareaImpl tareaImpl = new TareaImpl();

		tareaImpl.setUuid(getUuid());
		tareaImpl.setTareaId(getTareaId());
		tareaImpl.setGroupId(getGroupId());
		tareaImpl.setCompanyId(getCompanyId());
		tareaImpl.setUserId(getUserId());
		tareaImpl.setNombreTarea(getNombreTarea());
		tareaImpl.setDescripcionTarea(getDescripcionTarea());

		tareaImpl.resetOriginalValues();

		return tareaImpl;
	}

	@Override
	public int compareTo(Tarea tarea) {
		long primaryKey = tarea.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof Tarea)) {
			return false;
		}

		Tarea tarea = (Tarea)obj;

		long primaryKey = tarea.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public boolean isEntityCacheEnabled() {
		return ENTITY_CACHE_ENABLED;
	}

	@Override
	public boolean isFinderCacheEnabled() {
		return FINDER_CACHE_ENABLED;
	}

	@Override
	public void resetOriginalValues() {
		TareaModelImpl tareaModelImpl = this;

		tareaModelImpl._originalUuid = tareaModelImpl._uuid;

		tareaModelImpl._originalGroupId = tareaModelImpl._groupId;

		tareaModelImpl._setOriginalGroupId = false;

		tareaModelImpl._originalCompanyId = tareaModelImpl._companyId;

		tareaModelImpl._setOriginalCompanyId = false;

		tareaModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<Tarea> toCacheModel() {
		TareaCacheModel tareaCacheModel = new TareaCacheModel();

		tareaCacheModel.uuid = getUuid();

		String uuid = tareaCacheModel.uuid;

		if ((uuid != null) && (uuid.length() == 0)) {
			tareaCacheModel.uuid = null;
		}

		tareaCacheModel.tareaId = getTareaId();

		tareaCacheModel.groupId = getGroupId();

		tareaCacheModel.companyId = getCompanyId();

		tareaCacheModel.userId = getUserId();

		tareaCacheModel.nombreTarea = getNombreTarea();

		String nombreTarea = tareaCacheModel.nombreTarea;

		if ((nombreTarea != null) && (nombreTarea.length() == 0)) {
			tareaCacheModel.nombreTarea = null;
		}

		tareaCacheModel.descripcionTarea = getDescripcionTarea();

		String descripcionTarea = tareaCacheModel.descripcionTarea;

		if ((descripcionTarea != null) && (descripcionTarea.length() == 0)) {
			tareaCacheModel.descripcionTarea = null;
		}

		return tareaCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(15);

		sb.append("{uuid=");
		sb.append(getUuid());
		sb.append(", tareaId=");
		sb.append(getTareaId());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", nombreTarea=");
		sb.append(getNombreTarea());
		sb.append(", descripcionTarea=");
		sb.append(getDescripcionTarea());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(25);

		sb.append("<model><model-name>");
		sb.append("es.curso.model.Tarea");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>uuid</column-name><column-value><![CDATA[");
		sb.append(getUuid());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>tareaId</column-name><column-value><![CDATA[");
		sb.append(getTareaId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>nombreTarea</column-name><column-value><![CDATA[");
		sb.append(getNombreTarea());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>descripcionTarea</column-name><column-value><![CDATA[");
		sb.append(getDescripcionTarea());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static final ClassLoader _classLoader = Tarea.class.getClassLoader();
	private static final Class<?>[] _escapedModelInterfaces = new Class[] {
			Tarea.class, ModelWrapper.class
		};
	private String _uuid;
	private String _originalUuid;
	private long _tareaId;
	private long _groupId;
	private long _originalGroupId;
	private boolean _setOriginalGroupId;
	private long _companyId;
	private long _originalCompanyId;
	private boolean _setOriginalCompanyId;
	private long _userId;
	private String _nombreTarea;
	private String _descripcionTarea;
	private long _columnBitmask;
	private Tarea _escapedModel;
}